
#include "integration.hpp"
#include "linalg.hpp"

namespace integration{

/*######################################################################
#
#   Polynomial interpolation: The first routine should be
#   replaced by a nevilles algorithm, which is more accurate
#   for large k.
#
#######################################################################*/
/// @private
void read_poly_interpolation(int k,long double *P) // P must be of size k1*k1
{
  typedef double real;  // use long double later on
  int k1=k+1,i,n;
  real *aa,*pp; // long double linalg still missing -
                 // use Neville algorithm later on
  if(k<0){ std::cerr << "k<0 in poly_interpolation" << std::endl; abort();}
  aa = new real [k1*k1];
  pp = new real [k1*k1];
  //  aa[i,n] -> i^n
  for(i=0;i<=k;i++){
     aa[i*k1]=1.0;
     for(n=1;n<=k;n++){
       aa[i*k1+n]=aa[i*k1+n-1]*((real) i);
     }
  }
  linalg::linalg_matrix_inverse(aa,pp,k1);
  for(i=0;i<k1*k1;i++) P[i]=pp[i];
  delete [] aa;
  delete [] pp;
}
/// @private
void read_poly_differentiation(int k,long double *w) // w must be of size  k1*k1 
{
  int dim=k+1,i,j,n;
  long double *m1,x1,ipov;

  if(k<0){ std::cerr << "k<0 in poly_differentiation" << std::endl; abort();}
  m1 = new long double [dim*dim];
  read_poly_interpolation(k,m1);
  for(i=0;i<=k;i++){
    for(j=0;j<=k;j++){
      x1=0.0;
       ipov=1.0;
      for(n=1;n<=k;n++){
         if(n>1) ipov*=i;
         x1+=(ipov*n*m1[n*dim+j]);
      }
       w[i*dim+j]=x1;
    }
  }
  delete [] m1;
}
/// @private
void read_poly_integration(int k,long double *w) // w must be of size  k1*k1*k1
{
  int k1=k+1,i,j,r,s;
  long double x1,ipov,jpov,*m1;

  if(k<0){ std::cerr << "k<0 in poly_integration" << std::endl; abort();}
  m1 = new long double [k1*k1];
  read_poly_interpolation(k,m1);

  for(i=0;i<=k;i++){
    for(j=0;j<=k;j++){
      for(s=0;s<=k;s++){
        x1=0.0;
        ipov=i;
        jpov=j;
        for(r=0;r<=k;r++){
           x1 += m1[r*k1+s]*(jpov-ipov)/(r+1);
           ipov *= i;
           jpov *= j;
        }
        w[ i*k1*k1 +j*k1 + s ] =x1;
      }
    }
  }
  delete [] m1;
}
// you want to be less accurate: Feel free to do so, but
// always compute weights in high accuracy
/// @private
void read_poly_interpolation(int k,double *P) // P must be of size k1*k1
{
   int k1=k+1,l;
   long double *P1 = new long double [k1*k1];
   read_poly_interpolation(k,P1);
   for(l=0;l<k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}
/// @private
void read_poly_differentiation(int k,double *P) // P must be of size k1*k1
{
   int k1=k+1,l;
   long double  *P1 = new long double [k1*k1];
   read_poly_differentiation(k,P1);
   for(l=0;l<k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}
/// @private
void read_poly_integration(int k,double *P) // P must be of size k1*k1*k1
{
   int k1=k+1,l;
   long double *P1 = new long double [k1*k1*k1];
   read_poly_integration(k,P1);
   for(l=0;l<k1*k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}
/// @private
void read_poly_interpolation(int k,float *P) // P must be of size k1*k1
{
   int k1=k+1,l;
   long double *P1 = new long double [k1*k1];
   read_poly_interpolation(k,P1);
   for(l=0;l<k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}
/// @private
void read_poly_differentiation(int k,float *P) // P must be of size k1*k1
{
   int k1=k+1,l;
   long double *P1 = new long double [k1*k1];
   read_poly_differentiation(k,P1);
   for(l=0;l<k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}
/// @private
void read_poly_integration(int k,float *P) // P must be of size k1*k1*k1
{
   int k1=k+1,l;
   long double *P1 = new long double [k1*k1*k1];
   read_poly_integration(k,P1);
   for(l=0;l<k1*k1*k1;l++) P[l]=P1[l];
   delete [] P1;
}


/*##########################################################################
#
# Weights for gregory integration, as needed for Integrator class
# (see doumentation there)
#
##########################################################################*/

#define GK1 (GREGORY_KMAX+1)
/// @private
void read_gregory_weights(int k,double *w){
  int i,n,k1=k+1,k2=2*k1;
  double start[GK1*GK1],sigma[GK1*GK1],omega[GK1];
  if(k<0 || k >= GK1){
   std::cout << "read_gregory_weights: k out of range " << std::endl;
   abort();
  }
  switch(k){
  case 0:
   start[0]= 0.00000000000000000000e+00;
   sigma[0]= 5.00000000000000000000e-01;
   omega[0]= 5.00000000000000000000e-01;
   break;
  case 1:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 5.00000000000000000000e-01;
   start[3]= 5.00000000000000000000e-01;
   sigma[0]=  4.16666666666666666670e-01;
   sigma[1]=  1.16666666666666666670e+00;
   sigma[2]=  4.16666666666666666670e-01;
   sigma[3]=  1.08333333333333333330e+00;
   omega[0]=  4.16666666666666666670e-01;
   omega[1]=  1.08333333333333333330e+00;
   break;
  case 2:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 4.16666666666666666670e-01;
   start[4]= 6.66666666666666666670e-01;
   start[5]=-8.33333333333333333330e-02;
   start[6]= 3.33333333333333333330e-01;
   start[7]= 1.33333333333333333330e+00;
   start[8]= 3.33333333333333333330e-01;
   sigma[0]=  3.75000000000000000000e-01;
   sigma[1]=  1.12500000000000000000e+00;
   sigma[2]=  1.12500000000000000000e+00;
   sigma[3]=  3.75000000000000000000e-01;
   sigma[4]=  1.16666666666666666670e+00;
   sigma[5]=  9.16666666666666666670e-01;
   sigma[6]=  3.75000000000000000000e-01;
   sigma[7]=  1.16666666666666666670e+00;
   sigma[8]=  9.58333333333333333330e-01;
   omega[0]=  3.75000000000000000000e-01;
   omega[1]=  1.16666666666666666670e+00;
   omega[2]=  9.58333333333333333330e-01;
   break;
  case 3:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 3.75000000000000000000e-01;
   start[5]= 7.91666666666666666670e-01;
   start[6]=-2.08333333333333333330e-01;
   start[7]= 4.16666666666666666670e-02;
   start[8]= 3.33333333333333333330e-01;
   start[9]= 1.33333333333333333330e+00;
   start[10]= 3.33333333333333333330e-01;
   start[11]= 0.00000000000000000000e+00;
   start[12]= 3.75000000000000000000e-01;
   start[13]= 1.12500000000000000000e+00;
   start[14]= 1.12500000000000000000e+00;
   start[15]= 3.75000000000000000000e-01;
   sigma[0]=  3.48611111111111111110e-01;
   sigma[1]=  1.27222222222222222220e+00;
   sigma[2]=  7.58333333333333333330e-01;
   sigma[3]=  1.27222222222222222220e+00;
   sigma[4]=  3.48611111111111111110e-01;
   sigma[5]=  1.24583333333333333330e+00;
   sigma[6]=  9.05555555555555555560e-01;
   sigma[7]=  9.05555555555555555560e-01;
   sigma[8]=  3.48611111111111111110e-01;
   sigma[9]=  1.24583333333333333330e+00;
   sigma[10]=  8.79166666666666666670e-01;
   sigma[11]=  1.05277777777777777780e+00;
   sigma[12]=  3.48611111111111111110e-01;
   sigma[13]=  1.24583333333333333330e+00;
   sigma[14]=  8.79166666666666666670e-01;
   sigma[15]=  1.02638888888888888890e+00;
   omega[0]=  3.48611111111111111110e-01;
   omega[1]=  1.24583333333333333330e+00;
   omega[2]=  8.79166666666666666670e-01;
   omega[3]=  1.02638888888888888890e+00;
   break;
  case 4:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 0.00000000000000000000e+00;
   start[5]= 3.48611111111111111110e-01;
   start[6]= 8.97222222222222222220e-01;
   start[7]=-3.66666666666666666670e-01;
   start[8]= 1.47222222222222222220e-01;
   start[9]=-2.63888888888888888890e-02;
   start[10]= 3.22222222222222222220e-01;
   start[11]= 1.37777777777777777780e+00;
   start[12]= 2.66666666666666666670e-01;
   start[13]= 4.44444444444444444440e-02;
   start[14]=-1.11111111111111111110e-02;
   start[15]= 3.37500000000000000000e-01;
   start[16]= 1.27500000000000000000e+00;
   start[17]= 9.00000000000000000000e-01;
   start[18]= 5.25000000000000000000e-01;
   start[19]=-3.75000000000000000000e-02;
   start[20]= 3.11111111111111111110e-01;
   start[21]= 1.42222222222222222220e+00;
   start[22]= 5.33333333333333333330e-01;
   start[23]= 1.42222222222222222220e+00;
   start[24]= 3.11111111111111111110e-01;
   sigma[0]=  3.29861111111111111110e-01;
   sigma[1]=  1.30208333333333333330e+00;
   sigma[2]=  8.68055555555555555560e-01;
   sigma[3]=  8.68055555555555555560e-01;
   sigma[4]=  1.30208333333333333330e+00;
   sigma[5]=  3.29861111111111111110e-01;
   sigma[6]=  1.32083333333333333330e+00;
   sigma[7]=  7.47916666666666666670e-01;
   sigma[8]=  1.20277777777777777780e+00;
   sigma[9]=  7.47916666666666666670e-01;
   sigma[10]=  3.29861111111111111110e-01;
   sigma[11]=  1.32083333333333333330e+00;
   sigma[12]=  7.66666666666666666670e-01;
   sigma[13]=  1.08263888888888888890e+00;
   sigma[14]=  1.08263888888888888890e+00;
   sigma[15]=  3.29861111111111111110e-01;
   sigma[16]=  1.32083333333333333330e+00;
   sigma[17]=  7.66666666666666666670e-01;
   sigma[18]=  1.10138888888888888890e+00;
   sigma[19]=  9.62500000000000000000e-01;
   sigma[20]=  3.29861111111111111110e-01;
   sigma[21]=  1.32083333333333333330e+00;
   sigma[22]=  7.66666666666666666670e-01;
   sigma[23]=  1.10138888888888888890e+00;
   sigma[24]=  9.81250000000000000000e-01;
   omega[0]=  3.29861111111111111110e-01;
   omega[1]=  1.32083333333333333330e+00;
   omega[2]=  7.66666666666666666670e-01;
   omega[3]=  1.10138888888888888890e+00;
   omega[4]=  9.81250000000000000000e-01;
   break;
  case 5:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 0.00000000000000000000e+00;
   start[5]= 0.00000000000000000000e+00;
   start[6]= 3.29861111111111111110e-01;
   start[7]= 9.90972222222222222220e-01;
   start[8]=-5.54166666666666666670e-01;
   start[9]= 3.34722222222222222220e-01;
   start[10]=-1.20138888888888888890e-01;
   start[11]= 1.87500000000000000000e-02;
   start[12]= 3.11111111111111111110e-01;
   start[13]= 1.43333333333333333330e+00;
   start[14]= 1.55555555555555555560e-01;
   start[15]= 1.55555555555555555560e-01;
   start[16]=-6.66666666666666666670e-02;
   start[17]= 1.11111111111111111110e-02;
   start[18]= 3.18750000000000000000e-01;
   start[19]= 1.36875000000000000000e+00;
   start[20]= 7.12500000000000000000e-01;
   start[21]= 7.12500000000000000000e-01;
   start[22]=-1.31250000000000000000e-01;
   start[23]= 1.87500000000000000000e-02;
   start[24]= 3.11111111111111111110e-01;
   start[25]= 1.42222222222222222220e+00;
   start[26]= 5.33333333333333333330e-01;
   start[27]= 1.42222222222222222220e+00;
   start[28]= 3.11111111111111111110e-01;
   start[29]= 0.00000000000000000000e+00;
   start[30]= 3.29861111111111111110e-01;
   start[31]= 1.30208333333333333330e+00;
   start[32]= 8.68055555555555555560e-01;
   start[33]= 8.68055555555555555560e-01;
   start[34]= 1.30208333333333333330e+00;
   start[35]= 3.29861111111111111110e-01;
   sigma[0]=  3.15591931216931216930e-01;
   sigma[1]=  1.40644841269841269840e+00;
   sigma[2]=  5.33878968253968253970e-01;
   sigma[3]=  1.48816137566137566140e+00;
   sigma[4]=  5.33878968253968253970e-01;
   sigma[5]=  1.40644841269841269840e+00;
   sigma[6]=  3.15591931216931216930e-01;
   sigma[7]=  1.39217923280423280420e+00;
   sigma[8]=  6.38244047619047619050e-01;
   sigma[9]=  1.15398478835978835980e+00;
   sigma[10]=  1.15398478835978835980e+00;
   sigma[11]=  6.38244047619047619050e-01;
   sigma[12]=  3.15591931216931216930e-01;
   sigma[13]=  1.39217923280423280420e+00;
   sigma[14]=  6.23974867724867724870e-01;
   sigma[15]=  1.25834986772486772490e+00;
   sigma[16]=  8.19808201058201058200e-01;
   sigma[17]=  1.25834986772486772490e+00;
   sigma[18]=  3.15591931216931216930e-01;
   sigma[19]=  1.39217923280423280420e+00;
   sigma[20]=  6.23974867724867724870e-01;
   sigma[21]=  1.24408068783068783070e+00;
   sigma[22]=  9.24173280423280423280e-01;
   sigma[23]=  9.24173280423280423280e-01;
   sigma[24]=  3.15591931216931216930e-01;
   sigma[25]=  1.39217923280423280420e+00;
   sigma[26]=  6.23974867724867724870e-01;
   sigma[27]=  1.24408068783068783070e+00;
   sigma[28]=  9.09904100529100529100e-01;
   sigma[29]=  1.02853835978835978840e+00;
   sigma[30]=  3.15591931216931216930e-01;
   sigma[31]=  1.39217923280423280420e+00;
   sigma[32]=  6.23974867724867724870e-01;
   sigma[33]=  1.24408068783068783070e+00;
   sigma[34]=  9.09904100529100529100e-01;
   sigma[35]=  1.01426917989417989420e+00;
   omega[0]=  3.15591931216931216930e-01;
   omega[1]=  1.39217923280423280420e+00;
   omega[2]=  6.23974867724867724870e-01;
   omega[3]=  1.24408068783068783070e+00;
   omega[4]=  9.09904100529100529100e-01;
   omega[5]=  1.01426917989417989420e+00;
   break;
  case 6:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 0.00000000000000000000e+00;
   start[5]= 0.00000000000000000000e+00;
   start[6]= 0.00000000000000000000e+00;
   start[7]= 3.15591931216931216930e-01;
   start[8]= 1.07658730158730158730e+00;
   start[9]=-7.68204365079365079360e-01;
   start[10]= 6.20105820105820105820e-01;
   start[11]=-3.34176587301587301590e-01;
   start[12]= 1.04365079365079365080e-01;
   start[13]=-1.42691798941798941800e-02;
   start[14]= 3.01322751322751322750e-01;
   start[15]= 1.49206349206349206350e+00;
   start[16]= 8.73015873015873015870e-03;
   start[17]= 3.51322751322751322750e-01;
   start[18]=-2.13492063492063492060e-01;
   start[19]= 6.98412698412698412700e-02;
   start[20]=-9.78835978835978835980e-03;
   start[21]= 3.05803571428571428570e-01;
   start[22]= 1.44642857142857142860e+00;
   start[23]= 5.18303571428571428570e-01;
   start[24]= 9.71428571428571428570e-01;
   start[25]=-3.25446428571428571430e-01;
   start[26]= 9.64285714285714285710e-02;
   start[27]=-1.29464285714285714290e-02;
   start[28]= 3.02645502645502645500e-01;
   start[29]= 1.47301587301587301590e+00;
   start[30]= 4.06349206349206349210e-01;
   start[31]= 1.59153439153439153440e+00;
   start[32]= 1.84126984126984126980e-01;
   start[33]= 5.07936507936507936510e-02;
   start[34]=-8.46560846560846560850e-03;
   start[35]= 3.07126322751322751320e-01;
   start[36]= 1.43849206349206349210e+00;
   start[37]= 5.27033730158730158730e-01;
   start[38]= 1.32275132275132275130e+00;
   start[39]= 9.61061507936507936510e-01;
   start[40]= 4.66269841269841269840e-01;
   start[41]=-2.27347883597883597880e-02;
   start[42]= 2.92857142857142857140e-01;
   start[43]= 1.54285714285714285710e+00;
   start[44]= 1.92857142857142857140e-01;
   start[45]= 1.94285714285714285710e+00;
   start[46]= 1.92857142857142857140e-01;
   start[47]= 1.54285714285714285710e+00;
   start[48]= 2.92857142857142857140e-01;
   sigma[0]=  3.04224537037037037040e-01;
   sigma[1]=  1.44901620370370370370e+00;
   sigma[2]=  5.35937500000000000000e-01;
   sigma[3]=  1.21082175925925925930e+00;
   sigma[4]=  1.21082175925925925930e+00;
   sigma[5]=  5.35937500000000000000e-01;
   sigma[6]=  1.44901620370370370370e+00;
   sigma[7]=  3.04224537037037037040e-01;
   sigma[8]=  1.46038359788359788360e+00;
   sigma[9]=  4.42096560846560846560e-01;
   sigma[10]=  1.55390211640211640210e+00;
   sigma[11]=  4.78786375661375661380e-01;
   sigma[12]=  1.55390211640211640210e+00;
   sigma[13]=  4.42096560846560846560e-01;
   sigma[14]=  3.04224537037037037040e-01;
   sigma[15]=  1.46038359788359788360e+00;
   sigma[16]=  4.53463955026455026460e-01;
   sigma[17]=  1.46006117724867724870e+00;
   sigma[18]=  8.21866732804232804230e-01;
   sigma[19]=  8.21866732804232804230e-01;
   sigma[20]=  1.46006117724867724870e+00;
   sigma[21]=  3.04224537037037037040e-01;
   sigma[22]=  1.46038359788359788360e+00;
   sigma[23]=  4.53463955026455026460e-01;
   sigma[24]=  1.47142857142857142860e+00;
   sigma[25]=  7.28025793650793650790e-01;
   sigma[26]=  1.16494708994708994710e+00;
   sigma[27]=  7.28025793650793650790e-01;
   sigma[28]=  3.04224537037037037040e-01;
   sigma[29]=  1.46038359788359788360e+00;
   sigma[30]=  4.53463955026455026460e-01;
   sigma[31]=  1.47142857142857142860e+00;
   sigma[32]=  7.39393187830687830690e-01;
   sigma[33]=  1.07110615079365079370e+00;
   sigma[34]=  1.07110615079365079370e+00;
   sigma[35]=  3.04224537037037037040e-01;
   sigma[36]=  1.46038359788359788360e+00;
   sigma[37]=  4.53463955026455026460e-01;
   sigma[38]=  1.47142857142857142860e+00;
   sigma[39]=  7.39393187830687830690e-01;
   sigma[40]=  1.08247354497354497350e+00;
   sigma[41]=  9.77265211640211640210e-01;
   sigma[42]=  3.04224537037037037040e-01;
   sigma[43]=  1.46038359788359788360e+00;
   sigma[44]=  4.53463955026455026460e-01;
   sigma[45]=  1.47142857142857142860e+00;
   sigma[46]=  7.39393187830687830690e-01;
   sigma[47]=  1.08247354497354497350e+00;
   sigma[48]=  9.88632605820105820110e-01;
   omega[0]=  3.04224537037037037040e-01;
   omega[1]=  1.46038359788359788360e+00;
   omega[2]=  4.53463955026455026460e-01;
   omega[3]=  1.47142857142857142860e+00;
   omega[4]=  7.39393187830687830690e-01;
   omega[5]=  1.08247354497354497350e+00;
   omega[6]=  9.88632605820105820110e-01;
   break;
  case 7:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 0.00000000000000000000e+00;
   start[5]= 0.00000000000000000000e+00;
   start[6]= 0.00000000000000000000e+00;
   start[7]= 0.00000000000000000000e+00;
   start[8]= 3.04224537037037037040e-01;
   start[9]= 1.15615906084656084660e+00;
   start[10]=-1.00691964285714285710e+00;
   start[11]= 1.01796461640211640210e+00;
   start[12]=-7.32035383597883597880e-01;
   start[13]= 3.43080357142857142860e-01;
   start[14]=-9.38409391534391534390e-02;
   start[15]= 1.13673941798941798940e-02;
   start[16]= 2.92857142857142857140e-01;
   start[17]= 1.55132275132275132280e+00;
   start[18]=-1.69047619047619047620e-01;
   start[19]= 6.47619047619047619050e-01;
   start[20]=-5.09788359788359788360e-01;
   start[21]= 2.47619047619047619050e-01;
   start[22]=-6.90476190476190476190e-02;
   start[23]= 8.46560846560846560850e-03;
   start[24]= 2.95758928571428571430e-01;
   start[25]= 1.51674107142857142860e+00;
   start[26]= 3.07366071428571428570e-01;
   start[27]= 1.32299107142857142860e+00;
   start[28]=-6.77008928571428571430e-01;
   start[29]= 3.07366071428571428570e-01;
   start[30]=-8.32589285714285714290e-02;
   start[31]= 1.00446428571428571430e-02;
   start[32]= 2.94179894179894179890e-01;
   start[33]= 1.53227513227513227510e+00;
   start[34]= 2.28571428571428571430e-01;
   start[35]= 1.88783068783068783070e+00;
   start[36]=-1.12169312169312169310e-01;
   start[37]= 2.28571428571428571430e-01;
   start[38]=-6.77248677248677248680e-02;
   start[39]= 8.46560846560846560850e-03;
   start[40]= 2.95758928571428571430e-01;
   start[41]= 1.51806382275132275130e+00;
   start[42]= 2.88318452380952380950e-01;
   start[43]= 1.72061011904761904760e+00;
   start[44]= 5.63202711640211640210e-01;
   start[45]= 7.04985119047619047620e-01;
   start[46]=-1.02306547619047619050e-01;
   start[47]= 1.13673941798941798940e-02;
   start[48]= 2.92857142857142857140e-01;
   start[49]= 1.54285714285714285710e+00;
   start[50]= 1.92857142857142857140e-01;
   start[51]= 1.94285714285714285710e+00;
   start[52]= 1.92857142857142857140e-01;
   start[53]= 1.54285714285714285710e+00;
   start[54]= 2.92857142857142857140e-01;
   start[55]= 0.00000000000000000000e+00;
   start[56]= 3.04224537037037037040e-01;
   start[57]= 1.44901620370370370370e+00;
   start[58]= 5.35937500000000000000e-01;
   start[59]= 1.21082175925925925930e+00;
   start[60]= 1.21082175925925925930e+00;
   start[61]= 5.35937500000000000000e-01;
   start[62]= 1.44901620370370370370e+00;
   start[63]= 3.04224537037037037040e-01;
   sigma[0]=  2.94868000440917107580e-01;
   sigma[1]=  1.53523589065255731920e+00;
   sigma[2]=  1.80113536155202821870e-01;
   sigma[3]=  2.07786816578483245150e+00;
   sigma[4]= -1.76171186067019400350e-01;
   sigma[5]=  2.07786816578483245150e+00;
   sigma[6]=  1.80113536155202821870e-01;
   sigma[7]=  1.53523589065255731920e+00;
   sigma[8]=  2.94868000440917107580e-01;
   sigma[9]=  1.52587935405643738980e+00;
   sigma[10]=  2.66333223104056437390e-01;
   sigma[11]=  1.72204420194003527340e+00;
   sigma[12]=  6.90875220458553791890e-01;
   sigma[13]=  6.90875220458553791890e-01;
   sigma[14]=  1.72204420194003527340e+00;
   sigma[15]=  2.66333223104056437390e-01;
   sigma[16]=  2.94868000440917107580e-01;
   sigma[17]=  1.52587935405643738980e+00;
   sigma[18]=  2.56976686507936507940e-01;
   sigma[19]=  1.80826388888888888890e+00;
   sigma[20]=  3.35051256613756613760e-01;
   sigma[21]=  1.55792162698412698410e+00;
   sigma[22]=  3.35051256613756613760e-01;
   sigma[23]=  1.80826388888888888890e+00;
   sigma[24]=  2.94868000440917107580e-01;
   sigma[25]=  1.52587935405643738980e+00;
   sigma[26]=  2.56976686507936507940e-01;
   sigma[27]=  1.79890735229276895940e+00;
   sigma[28]=  4.21270943562610229280e-01;
   sigma[29]=  1.20209766313932980600e+00;
   sigma[30]=  1.20209766313932980600e+00;
   sigma[31]=  4.21270943562610229280e-01;
   sigma[32]=  2.94868000440917107580e-01;
   sigma[33]=  1.52587935405643738980e+00;
   sigma[34]=  2.56976686507936507940e-01;
   sigma[35]=  1.79890735229276895940e+00;
   sigma[36]=  4.11914406966490299820e-01;
   sigma[37]=  1.28831735008818342150e+00;
   sigma[38]=  8.46273699294532627870e-01;
   sigma[39]=  1.28831735008818342150e+00;
   sigma[40]=  2.94868000440917107580e-01;
   sigma[41]=  1.52587935405643738980e+00;
   sigma[42]=  2.56976686507936507940e-01;
   sigma[43]=  1.79890735229276895940e+00;
   sigma[44]=  4.11914406966490299820e-01;
   sigma[45]=  1.27896081349206349210e+00;
   sigma[46]=  9.32493386243386243390e-01;
   sigma[47]=  9.32493386243386243390e-01;
   sigma[48]=  2.94868000440917107580e-01;
   sigma[49]=  1.52587935405643738980e+00;
   sigma[50]=  2.56976686507936507940e-01;
   sigma[51]=  1.79890735229276895940e+00;
   sigma[52]=  4.11914406966490299820e-01;
   sigma[53]=  1.27896081349206349210e+00;
   sigma[54]=  9.23136849647266313930e-01;
   sigma[55]=  1.01871307319223985890e+00;
   sigma[56]=  2.94868000440917107580e-01;
   sigma[57]=  1.52587935405643738980e+00;
   sigma[58]=  2.56976686507936507940e-01;
   sigma[59]=  1.79890735229276895940e+00;
   sigma[60]=  4.11914406966490299820e-01;
   sigma[61]=  1.27896081349206349210e+00;
   sigma[62]=  9.23136849647266313930e-01;
   sigma[63]=  1.00935653659611992950e+00;
   omega[0]=  2.94868000440917107580e-01;
   omega[1]=  1.52587935405643738980e+00;
   omega[2]=  2.56976686507936507940e-01;
   omega[3]=  1.79890735229276895940e+00;
   omega[4]=  4.11914406966490299820e-01;
   omega[5]=  1.27896081349206349210e+00;
   omega[6]=  9.23136849647266313930e-01;
   omega[7]=  1.00935653659611992950e+00;
   break;
  case 8:
   start[0]= 0.00000000000000000000e+00;
   start[1]= 0.00000000000000000000e+00;
   start[2]= 0.00000000000000000000e+00;
   start[3]= 0.00000000000000000000e+00;
   start[4]= 0.00000000000000000000e+00;
   start[5]= 0.00000000000000000000e+00;
   start[6]= 0.00000000000000000000e+00;
   start[7]= 0.00000000000000000000e+00;
   start[8]= 0.00000000000000000000e+00;
   start[9]= 2.94868000440917107580e-01;
   start[10]= 1.23101135361552028220e+00;
   start[11]=-1.26890266754850088180e+00;
   start[12]= 1.54193066578483245150e+00;
   start[13]=-1.38699294532627865960e+00;
   start[14]= 8.67046406525573192240e-01;
   start[15]=-3.55823963844797178130e-01;
   start[16]= 8.62196869488536155200e-02;
   start[17]=-9.35653659611992945330e-03;
   start[18]= 2.85511463844797178130e-01;
   start[19]= 1.61008818342151675480e+00;
   start[20]=-3.74726631393298059960e-01;
   start[21]= 1.05897707231040564370e+00;
   start[22]=-1.02398589065255731920e+00;
   start[23]= 6.58977072310405643740e-01;
   start[24]=-2.74726631393298059960e-01;
   start[25]= 6.72310405643738977070e-02;
   start[26]=-7.34567901234567901230e-03;
   start[27]= 2.87522321428571428570e-01;
   start[28]= 1.58263392857142857140e+00;
   start[29]= 7.67410714285714285710e-02;
   start[30]= 1.78424107142857142860e+00;
   start[31]=-1.25357142857142857140e+00;
   start[32]= 7.68616071428571428570e-01;
   start[33]=-3.13883928571428571430e-01;
   start[34]= 7.59375000000000000000e-02;
   start[35]=-8.23660714285714285710e-03;
   start[36]= 2.86631393298059964730e-01;
   start[37]= 1.59266313932980599650e+00;
   start[38]= 1.72134038800705467370e-02;
   start[39]= 2.31054673721340388010e+00;
   start[40]=-6.40564373897707231040e-01;
   start[41]= 6.51287477954144620810e-01;
   start[42]=-2.79082892416225749560e-01;
   start[43]= 6.88536155202821869490e-02;
   start[44]=-7.54850088183421516750e-03;
   start[45]= 2.87319499559082892420e-01;
   start[46]= 1.58557925485008818340e+00;
   start[47]= 5.20144400352733686070e-02;
   start[48]= 2.19321814373897707230e+00;
   start[49]=-2.75573192239858906530e-02;
   start[50]= 1.17759314373897707230e+00;
   start[51]=-3.38610559964726631390e-01;
   start[52]= 7.88828262786596119930e-02;
   start[53]=-8.43942901234567901230e-03;
   start[54]= 2.86428571428571428570e-01;
   start[55]= 1.59428571428571428570e+00;
   start[56]= 1.28571428571428571430e-02;
   start[57]= 2.30285714285714285710e+00;
   start[58]=-2.57142857142857142860e-01;
   start[59]= 1.90285714285714285710e+00;
   start[60]= 1.12857142857142857140e-01;
   start[61]= 5.14285714285714285710e-02;
   start[62]=-6.42857142857142857140e-03;
   start[63]= 2.88439429012345679010e-01;
   start[64]= 1.57529706790123456790e+00;
   start[65]= 9.39544753086419753090e-02;
   start[66]= 2.09478780864197530860e+00;
   start[67]= 1.05864197530864197530e-01;
   start[68]= 1.41990354938271604940e+00;
   start[69]= 1.00703317901234567900e+00;
   start[70]= 4.30505401234567901230e-01;
   start[71]=-1.57851080246913580250e-02;
   start[72]= 2.79082892416225749560e-01;
   start[73]= 1.66151675485008818340e+00;
   start[74]=-2.61869488536155202820e-01;
   start[75]= 2.96183421516754850090e+00;
   start[76]=-1.28112874779541446210e+00;
   start[77]= 2.96183421516754850090e+00;
   start[78]=-2.61869488536155202820e-01;
   start[79]= 1.66151675485008818340e+00;
   start[80]= 2.79082892416225749560e-01;
   sigma[0]=  2.86975446428571428570e-01;
   sigma[1]=  1.58112723214285714290e+00;
   sigma[2]=  1.08482142857142857140e-01;
   sigma[3]=  1.94303571428571428570e+00;
   sigma[4]=  5.80379464285714285710e-01;
   sigma[5]=  5.80379464285714285710e-01;
   sigma[6]=  1.94303571428571428570e+00;
   sigma[7]=  1.08482142857142857140e-01;
   sigma[8]=  1.58112723214285714290e+00;
   sigma[9]=  2.86975446428571428570e-01;
   sigma[10]=  1.58901978615520282190e+00;
   sigma[11]=  2.80926201499118165780e-02;
   sigma[12]=  2.31338734567901234570e+00;
   sigma[13]= -4.38419036596119929450e-01;
   sigma[14]=  2.44188767636684303350e+00;
   sigma[15]= -4.38419036596119929450e-01;
   sigma[16]=  2.31338734567901234570e+00;
   sigma[17]=  2.80926201499118165780e-02;
   sigma[18]=  2.86975446428571428570e-01;
   sigma[19]=  1.58901978615520282190e+00;
   sigma[20]=  3.59851741622574955910e-02;
   sigma[21]=  2.23299782297178130510e+00;
   sigma[22]= -6.80674052028218694890e-02;
   sigma[23]=  1.42308917548500881830e+00;
   sigma[24]=  1.42308917548500881830e+00;
   sigma[25]= -6.80674052028218694890e-02;
   sigma[26]=  2.23299782297178130510e+00;
   sigma[27]=  2.86975446428571428570e-01;
   sigma[28]=  1.58901978615520282190e+00;
   sigma[29]=  3.59851741622574955910e-02;
   sigma[30]=  2.24089037698412698410e+00;
   sigma[31]= -1.48456927910052910050e-01;
   sigma[32]=  1.79344080687830687830e+00;
   sigma[33]=  4.04290674603174603170e-01;
   sigma[34]=  1.79344080687830687830e+00;
   sigma[35]= -1.48456927910052910050e-01;
   sigma[36]=  2.86975446428571428570e-01;
   sigma[37]=  1.58901978615520282190e+00;
   sigma[38]=  3.59851741622574955910e-02;
   sigma[39]=  2.24089037698412698410e+00;
   sigma[40]= -1.40564373897707231040e-01;
   sigma[41]=  1.71305128417107583770e+00;
   sigma[42]=  7.74642305996472663140e-01;
   sigma[43]=  7.74642305996472663140e-01;
   sigma[44]=  1.71305128417107583770e+00;
   sigma[45]=  2.86975446428571428570e-01;
   sigma[46]=  1.58901978615520282190e+00;
   sigma[47]=  3.59851741622574955910e-02;
   sigma[48]=  2.24089037698412698410e+00;
   sigma[49]= -1.40564373897707231040e-01;
   sigma[50]=  1.72094383818342151680e+00;
   sigma[51]=  6.94252783289241622570e-01;
   sigma[52]=  1.14499393738977072310e+00;
   sigma[53]=  6.94252783289241622570e-01;
   sigma[54]=  2.86975446428571428570e-01;
   sigma[55]=  1.58901978615520282190e+00;
   sigma[56]=  3.59851741622574955910e-02;
   sigma[57]=  2.24089037698412698410e+00;
   sigma[58]= -1.40564373897707231040e-01;
   sigma[59]=  1.72094383818342151680e+00;
   sigma[60]=  7.02145337301587301590e-01;
   sigma[61]=  1.06460441468253968250e+00;
   sigma[62]=  1.06460441468253968250e+00;
   sigma[63]=  2.86975446428571428570e-01;
   sigma[64]=  1.58901978615520282190e+00;
   sigma[65]=  3.59851741622574955910e-02;
   sigma[66]=  2.24089037698412698410e+00;
   sigma[67]= -1.40564373897707231040e-01;
   sigma[68]=  1.72094383818342151680e+00;
   sigma[69]=  7.02145337301587301590e-01;
   sigma[70]=  1.07249696869488536160e+00;
   sigma[71]=  9.84214891975308641980e-01;
   sigma[72]=  2.86975446428571428570e-01;
   sigma[73]=  1.58901978615520282190e+00;
   sigma[74]=  3.59851741622574955910e-02;
   sigma[75]=  2.24089037698412698410e+00;
   sigma[76]= -1.40564373897707231040e-01;
   sigma[77]=  1.72094383818342151680e+00;
   sigma[78]=  7.02145337301587301590e-01;
   sigma[79]=  1.07249696869488536160e+00;
   sigma[80]=  9.92107445987654320990e-01;
   omega[0]=  2.86975446428571428570e-01;
   omega[1]=  1.58901978615520282190e+00;
   omega[2]=  3.59851741622574955910e-02;
   omega[3]=  2.24089037698412698410e+00;
   omega[4]= -1.40564373897707231040e-01;
   omega[5]=  1.72094383818342151680e+00;
   omega[6]=  7.02145337301587301590e-01;
   omega[7]=  1.07249696869488536160e+00;
   omega[8]=  9.92107445987654320990e-01;
   break;
   }
   /* now write weights as required by Integrator class
   (see documentation there)*/
   for(n=0;n<4*k1*k1;n++) w[n]=0;
   //line n (0..k):
   for(n=0;n<=k;n++) for(i=0;i<=k;i++) w[ k2*n + i ] = start[k1*n+i];
   // line k1 + n, n=0..k:
   for(n=0;n<=k;n++){
     for(i=0;i<=k;i++) w[ k2*(k1+n) + i ] = sigma[k1*n+i];
     for(i=k1;i<=k1+n;i++)  w[ k2*(k1+n) + i ] = omega [k1+n-i];
   }
   return;
}


/*##########################################################################
#
# Weights for backward differentiation, as needed for Integrator class
# (see doumentation there)
#
##########################################################################*/
/// @private
void read_bd_weights(int k,double *w){
  double *alpha=w;
  if(k<=0 || k >= GK1){
   std::cout << "read_bd_weights: k out of range " << std::endl;
   abort();
  }
  switch(k){
    case 1:
      alpha[0]= 1.00000000000000000000e+00;
      alpha[1]=-1.00000000000000000000e+00;
      break;
    case 2:
      alpha[0]= 1.50000000000000000000e+00;
      alpha[1]=-2.00000000000000000000e+00;
      alpha[2]= 5.00000000000000000000e-01;
      break;
    case 3:
      alpha[0]= 1.83333333333333333330e+00;
      alpha[1]=-3.00000000000000000000e+00;
      alpha[2]= 1.50000000000000000000e+00;
      alpha[3]=-3.33333333333333333330e-01;
      break;
    case 4:
      alpha[0]= 2.08333333333333333330e+00;
      alpha[1]=-4.00000000000000000000e+00;
      alpha[2]= 3.00000000000000000000e+00;
      alpha[3]=-1.33333333333333333330e+00;
      alpha[4]= 2.50000000000000000000e-01;
      break;
    case 5:
      alpha[0]= 2.28333333333333333330e+00;
      alpha[1]=-5.00000000000000000000e+00;
      alpha[2]= 5.00000000000000000000e+00;
      alpha[3]=-3.33333333333333333330e+00;
      alpha[4]= 1.25000000000000000000e+00;
      alpha[5]=-2.00000000000000000000e-01;
      break;
    case 6:
      alpha[0]= 2.45000000000000000000e+00;
      alpha[1]=-6.00000000000000000000e+00;
      alpha[2]= 7.50000000000000000000e+00;
      alpha[3]=-6.66666666666666666670e+00;
      alpha[4]= 3.75000000000000000000e+00;
      alpha[5]=-1.20000000000000000000e+00;
      alpha[6]= 1.66666666666666666670e-01;
      break;
    case 7:
      alpha[0]= 2.59285714285714285710e+00;
      alpha[1]=-7.00000000000000000000e+00;
      alpha[2]= 1.05000000000000000000e+01;
      alpha[3]=-1.16666666666666666670e+01;
      alpha[4]= 8.75000000000000000000e+00;
      alpha[5]=-4.20000000000000000000e+00;
      alpha[6]= 1.16666666666666666670e+00;
      alpha[7]=-1.42857142857142857140e-01;
      break;
    case 8:
      alpha[0]= 2.71785714285714285710e+00;
      alpha[1]=-8.00000000000000000000e+00;
      alpha[2]= 1.40000000000000000000e+01;
      alpha[3]=-1.86666666666666666670e+01;
      alpha[4]= 1.75000000000000000000e+01;
      alpha[5]=-1.12000000000000000000e+01;
      alpha[6]= 4.66666666666666666670e+00;
      alpha[7]=-1.14285714285714285710e+00;
      alpha[8]= 1.25000000000000000000e-01;
      break;
    case 9:
      alpha[0]= 2.82896825396825396830e+00;
      alpha[1]=-9.00000000000000000000e+00;
      alpha[2]= 1.80000000000000000000e+01;
      alpha[3]=-2.80000000000000000000e+01;
      alpha[4]= 3.15000000000000000000e+01;
      alpha[5]=-2.52000000000000000000e+01;
      alpha[6]= 1.40000000000000000000e+01;
      alpha[7]=-5.14285714285714285710e+00;
      alpha[8]= 1.12500000000000000000e+00;
      alpha[9]=-1.11111111111111111110e-01;
      break;
  }
  return;
}

/*##########################################################################
#
# Weights for the rcorr, as needed for Integrator class
# (see doumentation there)
#
##########################################################################*/
/// @private
void read_rcorr(int k,double *w){
  if(k<2) return;
  if(k>5) {
    std::cout << "read_rcorr: k out of range " <<  std::endl;
    abort();
  }
  switch(k){
    case 2:
        w[0]=9.166666666666666667e-02;
	w[1]=3.583333333333333333e-01;
	w[2]=-3.333333333333333333e-02;
	w[3]=3.583333333333333333e-01;
	w[4]=3.666666666666666667e-01;
	w[5]=-5.833333333333333333e-02;
	w[6]=-3.333333333333333333e-02;
	w[7]=-5.833333333333333333e-02;
	w[8]=8.333333333333333333e-03;
        break;
    case 3:
	w[0]=6.316137566137566138e-02;
	w[1]=3.674603174603174603e-01;
	w[2]=-6.884920634920634921e-02;
	w[3]=1.322751322751322751e-02;
	w[4]=3.674603174603174603e-01;
	w[5]=5.684523809523809524e-01;
	w[6]=-1.809523809523809524e-01;
	w[7]=3.670634920634920635e-02;
	w[8]=-6.884920634920634921e-02;
	w[9]=-1.809523809523809524e-01;
	w[10]=5.178571428571428571e-02;
	w[11]=-1.031746031746031746e-02;
	w[12]=1.322751322751322751e-02;
	w[13]=3.670634920634920635e-02;
	w[14]=-1.031746031746031746e-02;
	w[15]=2.050264550264550265e-03;
	w[16+0]=-2.645502645502645503e-02;
	w[16+1]=7.936507936507936508e-02;
	w[16+2]=2.984126984126984127e-01;
	w[16+3]=-1.798941798941798942e-02;
	w[16+4]=7.936507936507936508e-02;
	w[16+5]=1.028571428571428571e+00;
	w[16+6]=2.380952380952380952e-01;
	w[16+7]=-1.269841269841269841e-02;
	w[16+8]=2.984126984126984127e-01;
	w[16+9]=2.380952380952380952e-01;
	w[16+10]=-2.380952380952380952e-01;
	w[16+11]=3.492063492063492064e-02;
	w[16+12]=-1.798941798941798942e-02;
	w[16+13]=-1.269841269841269841e-02;
	w[16+14]=3.492063492063492064e-02;
	w[16+15]=-4.232804232804232804e-03;
	break;
    case 4:
	w[0]=4.816743827160493827e-02;
	w[1]=3.721698633156966490e-01;
	w[2]=-1.049685846560846561e-01;
	w[3]=4.034115961199294533e-02;
	w[4]=-7.098765432098765432e-03;
	w[5]=3.721698633156966490e-01;
	w[6]=7.706790123456790124e-01;
	w[7]=-3.680720899470899471e-01;
	w[8]=1.493165784832451499e-01;
	w[9]=-2.687114197530864198e-02;
	w[10]=-1.049685846560846561e-01;
	w[11]=-3.680720899470899471e-01;
	w[12]=1.581349206349206349e-01;
	w[13]=-6.301256613756613757e-02;
	w[14]=1.125165343915343915e-02;
	w[15]=4.034115961199294533e-02;
	w[16]=1.493165784832451499e-01;
	w[17]=-6.301256613756613757e-02;
	w[18]=2.504409171075837742e-02;
	w[19]=-4.467041446208112875e-03;
	w[20]=-7.098765432098765432e-03;
	w[21]=-2.687114197530864198e-02;
	w[22]=1.125165343915343915e-02;
	w[23]=-4.467041446208112875e-03;
	w[24]=7.964065255731922399e-04;
	w[25+0]=-1.419753086419753086e-02;
	w[25+1]=5.679012345679012346e-02;
	w[25+2]=3.124338624338624339e-01;
	w[25+3]=-3.844797178130511464e-02;
	w[25+4]=5.643738977072310406e-03;
	w[25+5]=5.679012345679012346e-02;
	w[25+6]=1.013051146384479718e+00;
	w[25+7]=3.407407407407407407e-01;
	w[25+8]=-3.668430335097001764e-02;
	w[25+9]=3.880070546737213404e-03;
	w[25+10]=3.124338624338624339e-01;
	w[25+11]=3.407407407407407407e-01;
	w[25+12]=-5.111111111111111111e-01;
	w[25+13]=1.502645502645502646e-01;
	w[25+14]=-2.566137566137566138e-02;
	w[25+15]=-3.844797178130511464e-02;
	w[25+16]=-3.668430335097001764e-02;
	w[25+17]=1.502645502645502646e-01;
	w[25+18]=-3.668430335097001764e-02;
	w[25+19]=5.996472663139329806e-03;
	w[25+20]=5.643738977072310406e-03;
	w[25+21]=3.880070546737213404e-03;
	w[25+22]=-2.566137566137566138e-02;
	w[25+23]=5.996472663139329806e-03;
	w[25+24]=-9.700176366843033510e-04;
	w[50+0]=1.049107142857142857e-02;
	w[50+1]=-2.745535714285714286e-02;
	w[50+2]=1.064732142857142857e-01;
	w[50+3]=2.587053571428571429e-01;
	w[50+4]=-1.071428571428571429e-02;
	w[50+5]=-2.745535714285714286e-02;
	w[50+6]=-6.428571428571428571e-02;
	w[50+7]=1.096875000000000000e+00;
	w[50+8]=2.839285714285714286e-01;
	w[50+9]=-1.406250000000000000e-02;
	w[50+10]=1.064732142857142857e-01;
	w[50+11]=1.096875000000000000e+00;
	w[50+12]=-1.446428571428571429e-01;
	w[50+13]=-1.647321428571428571e-01;
	w[50+14]=6.026785714285714286e-03;
	w[50+15]=2.587053571428571429e-01;
	w[50+16]=2.839285714285714286e-01;
	w[50+17]=-1.647321428571428571e-01;
	w[50+18]=1.678571428571428571e-01;
	w[50+19]=-2.075892857142857143e-02;
	w[50+20]=-1.071428571428571429e-02;
	w[50+21]=-1.406250000000000000e-02;
	w[50+22]=6.026785714285714286e-03;
	w[50+23]=-2.075892857142857143e-02;
	w[50+24]=2.008928571428571429e-03;
	break;
    case 5:
	w[0]=3.892308501683501684e-02;
	w[1]=3.750409351451018118e-01;
	w[2]=-1.413379329004329004e-01;
	w[3]=8.148674242424242424e-02;
	w[4]=-2.867932800224466891e-02;
	w[5]=4.427609427609427609e-03;
	w[6]=3.750409351451018118e-01;
	w[7]=9.730771254208754209e-01;
	w[8]=-6.197322931697931698e-01;
	w[9]=3.770956088664421998e-01;
	w[10]=-1.357218013468013468e-01;
	w[11]=2.121264730639730640e-02;
	w[12]=-1.413379329004329004e-01;
	w[13]=-6.197322931697931698e-01;
	w[14]=3.551832812249478916e-01;
	w[15]=-2.122985810485810486e-01;
	w[16]=7.581694925444925445e-02;
	w[17]=-1.179809002725669392e-02;
	w[18]=8.148674242424242424e-02;
	w[19]=3.770956088664421998e-01;
	w[20]=-2.122985810485810486e-01;
	w[21]=1.265677609427609428e-01;
	w[22]=-4.515116442199775533e-02;
	w[23]=7.021855459355459356e-03;
	w[24]=-2.867932800224466891e-02;
	w[25]=-1.357218013468013468e-01;
	w[26]=7.581694925444925445e-02;
	w[27]=-4.515116442199775533e-02;
	w[28]=1.609961219336219336e-02;
	w[29]=-2.503156565656565657e-03;
	w[30]=4.427609427609427609e-03;
	w[31]=2.121264730639730640e-02;
	w[32]=-1.179809002725669392e-02;
	w[33]=7.021855459355459356e-03;
	w[34]=-2.503156565656565657e-03;
	w[35]=3.891343995510662177e-04;
	w[36+0]=-8.855218855218855219e-03;
	w[36+1]=4.427609427609427609e-02;
	w[36+2]=3.204248837582170916e-01;
	w[36+3]=-5.980759980759980760e-02;
	w[36+4]=1.757575757575757576e-02;
	w[36+5]=-2.502805836139169472e-03;
	w[36+6]=4.427609427609427609e-02;
	w[36+7]=1.004633637966971300e+00;
	w[36+8]=4.427609427609427609e-01;
	w[36+9]=-7.186147186147186147e-02;
	w[36+10]=1.520763187429854096e-02;
	w[36+11]=-1.683501683501683502e-03;
	w[36+12]=3.204248837582170916e-01;
	w[36+13]=4.427609427609427609e-01;
	w[36+14]=-8.855218855218855219e-01;
	w[36+15]=3.909892576559243226e-01;
	w[36+16]=-1.335016835016835017e-01;
	w[36+17]=2.040404040404040404e-02;
	w[36+18]=-5.980759980759980760e-02;
	w[36+19]=-7.186147186147186147e-02;
	w[36+20]=3.909892576559243226e-01;
	w[36+21]=-1.437229437229437229e-01;
	w[36+22]=4.699374699374699375e-02;
	w[36+23]=-7.035433702100368767e-03;
	w[36+24]=1.757575757575757576e-02;
	w[36+25]=1.520763187429854096e-02;
	w[36+26]=-1.335016835016835017e-01;
	w[36+27]=4.699374699374699375e-02;
	w[36+28]=-1.520763187429854096e-02;
	w[36+29]=2.265512265512265512e-03;
	w[36+30]=-2.502805836139169472e-03;
	w[36+31]=-1.683501683501683502e-03;
	w[36+32]=2.040404040404040404e-02;
	w[36+33]=-7.035433702100368767e-03;
	w[36+34]=2.265512265512265512e-03;
	w[36+35]=-3.367003367003367003e-04;
	w[72+0]=4.616477272727272727e-03;
	w[72+1]=-1.542613636363636364e-02;
	w[72+2]=7.678977272727272727e-02;
	w[72+3]=2.733887987012987013e-01;
	w[72+4]=-2.334618506493506494e-02;
	w[72+5]=2.727272727272727273e-03;
	w[72+6]=-1.542613636363636364e-02;
	w[72+7]=-3.771306818181818182e-02;
	w[72+8]=1.071854707792207792e+00;
	w[72+9]=3.839488636363636364e-01;
	w[72+10]=-3.762175324675324675e-02;
	w[72+11]=3.707386363636363636e-03;
	w[72+12]=7.678977272727272727e-02;
	w[72+13]=1.071854707792207792e+00;
	w[72+14]=-1.508522727272727273e-01;
	w[72+15]=-3.085227272727272727e-01;
	w[72+16]=2.502029220779220779e-02;
	w[72+17]=-1.789772727272727273e-03;
	w[72+18]=2.733887987012987013e-01;
	w[72+19]=3.839488636363636364e-01;
	w[72+20]=-3.085227272727272727e-01;
	w[72+21]=4.616477272727272727e-01;
	w[72+22]=-1.147524350649350649e-01;
	w[72+23]=1.678977272727272727e-02;
	w[72+24]=-2.334618506493506494e-02;
	w[72+25]=-3.762175324675324675e-02;
	w[72+26]=2.502029220779220779e-02;
	w[72+27]=-1.147524350649350649e-01;
	w[72+28]=2.255478896103896104e-02;
	w[72+29]=-3.104707792207792208e-03;
	w[72+30]=2.727272727272727273e-03;
	w[72+31]=3.707386363636363636e-03;
	w[72+32]=-1.789772727272727273e-03;
	w[72+33]=1.678977272727272727e-02;
	w[72+34]=-3.104707792207792208e-03;
	w[72+35]=4.200487012987012987e-04;
	w[108+0]=-5.117845117845117845e-03;
	w[108+1]=1.274971941638608305e-02;
	w[108+2]=-5.117845117845117845e-02;
	w[108+3]=1.282154882154882155e-01;
	w[108+4]=2.335994869328202662e-01;
	w[108+5]=-7.157287157287157287e-03;
	w[108+6]=1.274971941638608305e-02;
	w[108+7]=6.464646464646464646e-02;
	w[108+8]=-1.292929292929292929e-01;
	w[108+9]=1.167740901074234408e+00;
	w[108+10]=3.205387205387205387e-01;
	w[108+11]=-1.416065416065416065e-02;
	w[108+12]=-5.117845117845117845e-02;
	w[108+13]=-1.292929292929292929e-01;
	w[108+14]=1.218021484688151355e+00;
	w[108+15]=-2.585858585858585859e-01;
	w[108+16]=-2.558922558922558923e-01;
	w[108+17]=1.026134359467692801e-02;
	w[108+18]=1.282154882154882155e-01;
	w[108+19]=1.167740901074234408e+00;
	w[108+20]=-2.585858585858585859e-01;
	w[108+21]=2.585858585858585859e-01;
	w[108+22]=1.274971941638608305e-01;
	w[108+23]=-1.231361231361231361e-03;
	w[108+24]=2.335994869328202662e-01;
	w[108+25]=3.205387205387205387e-01;
	w[108+26]=-2.558922558922558923e-01;
	w[108+27]=1.274971941638608305e-01;
	w[108+28]=-1.279461279461279461e-01;
	w[108+29]=1.331409331409331409e-02;
	w[108+30]=-7.157287157287157287e-03;
	w[108+31]=-1.416065416065416065e-02;
	w[108+32]=1.026134359467692801e-02;
	w[108+33]=-1.231361231361231361e-03;
	w[108+34]=1.331409331409331409e-02;
	w[108+35]=-1.026134359467692801e-03;
	break;
    }
    return;
}

} //namespace
